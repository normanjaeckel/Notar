# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-29 09:12
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FlatPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text="Example: 'legal-notice'. Each page must have a unique slug.", unique=True, verbose_name='Slug/URL')),
                ('title', models.CharField(help_text="Example: 'Legal notice'. The title is used for the entry in the menu. Do not use long titles.", max_length=255, verbose_name='Menu title')),
                ('subtitle', models.CharField(blank=True, help_text="Example: 'The legal details of our business.'. The subtitle is used as subheading at the top of the page.", max_length=255, verbose_name='Subtitle')),
                ('weight', models.IntegerField(default=100, help_text='Use this for ordering. A higher number means that the entry appears further down in the menu.', verbose_name='Weight')),
                ('content', models.TextField(blank=True, help_text='You can use full HTML here.', verbose_name='Content (HTML)')),
                ('sitemap_priority', models.DecimalField(decimal_places=1, default=0.5, help_text='The sitemap is used by search engines: See <a href="http://www.sitemaps.org/protocol.html#prioritydef">Sitemap protocol</a>.', max_digits=2, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Priority in the sitemap')),
                ('parent', models.ForeignKey(blank=True, help_text='If this field is empty, the page appears in the main menu at root level. Else the page is a subpage of its parent.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='Notar.FlatPage', verbose_name='Parent element')),
            ],
            options={
                'verbose_name_plural': 'Static Pages',
                'ordering': ('weight', 'slug'),
                'verbose_name': 'Static Page',
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mediafile', models.FileField(max_length=255, upload_to='', verbose_name='File')),
                ('uploaded_on', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded on')),
            ],
            options={
                'verbose_name_plural': 'Files',
                'ordering': ('-uploaded_on',),
                'verbose_name': 'File',
            },
        ),
    ]
